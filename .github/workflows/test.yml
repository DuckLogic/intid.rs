# We use `actions-rs` for most of our actions
#
# This file is for the main tests. clippy & rustfmt are separate workflows
on: [push, pull_request]
name: Cargo Test

env:
  CARGO_TERM_COLOR: always
  # has a history of occasional bugs (especially on old versions)
  #
  # the ci is free so we might as well use it ;)
  CARGO_INCREMENTAL: 0



jobs:
  shared-config:
    outputs:
      # TODO: We cannot use --all-features because some crates have a 'nightly' feature
      # We use this as a workaround
      all_features: "intid/__ci_all intid-allocator/__ci_all idmap/__ci_all intid-derive/__ci_all"
      # Enable all features and also the nightly features
      nightly_features: "idmap/nightly"
    runs-on: ubuntu-latest
    steps:
      # dummy action
      - uses: actions/checkout@v5
  test:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    needs: shared-config

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Even if one job fails we still want to see the other ones
      matrix:
        rust:
          # Minimum Supported Rust Version
          #
          # This is hardcoded and needs to be in sync with Cargo.toml and the README
          #
          # If one of the features does not support this MSRV,
          # you need to remove this from the main list and manually add the desired
          # feature/version combinations to 'include'
          # This hack is not currently needed because serde-erased v0.3 supports our MSRV.
          - 1.65

          # Intermediate Releases (between MSRV and latest stable)
          # Be careful not to add these needlessly; they hold up CI
          - 1.80 # BinaryHeap::new becomes const
          - 1.81 # core::error::Error

          # The most recent version of stable rust (automatically updated)
          - stable
          - nightly
        # NOTE: Features to test must be specified manually. They are applied to all versions separately.
        features:
          - "" # no features
          - ${{ needs.shared-config.outputs.all_features }} # all features
        include:
          - rust: nightly
            features: ${{ needs.shared-config.outputs.all_features }} ${{ needs.shared-config.outputs.nightly_features }}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Cache Cargo Registry
        id: cache-index
        uses: actions/cache@v4
        with:
          path:
            # Before the sparse index, updating the registry took forever
            ~/.cargo/registry/index/
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}
          restore-keys: |
            ${{ runner.os }}-cargo-
        continue-on-error: false
      - name: Test
        # NOTE: Running --all-targets does not include doc tests
        run: |
          cargo test --all --verbose --no-default-features --features "${{ matrix.features }}"

  clippy:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    needs: shared-config

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          # in hardcoded versions, warnings will fail the build
          - 1.89
          # in auto-updated versions, warnings will not fail the build
          - stable
          - nightly
        features:
          - ""
          - ${{ needs.shared-config.outputs.all_features }}
        include:
          - rust: nightly
            features: ${{ needs.shared-config.outputs.all_features }} ${{ needs.shared-config.outputs.nightly_features }}

    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - name: Clippy
        run: |
          cargo clippy --all --all-targets --verbose --no-default-features --features "${{ matrix.features }}" -- -D warnings
        # When using hardcoded/pinned versions, warnings are forbidden.
        #
        # On automatically updated versions of rust (both stable & nightly) we allow clippy to fail.
        # This is because automatic updates can introduce new lints or change existing lints.
        continue-on-error: ${{ !contains(matrix.rust, '1.') }}

  docs:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    needs: shared-config
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: "-D warnings"
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - nightly
        features:
          # cannot run with --no-default-features since that breaks doc-links
          - ${{ needs.shared-config.outputs.all_features }}
        include:
          - rust: nightly
            features: ${{ needs.shared-config.outputs.all_features }} ${{ needs.shared-config.outputs.nightly_features }}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Docs
        run: |
          cargo doc --verbose --no-default-features --features "${{ matrix.features }}"
