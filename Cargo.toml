[package]
name = "idmap"
version.workspace = true
description = "Efficient maps of integer id keys to values, backed by an underlying `Vec`"
authors.workspace = true
repository.workspace = true
edition.workspace = true
readme.workspace = true
license.workspace = true
rust-version.workspace = true

[dependencies]
# Defines the IntegerId trait
intid.workspace = true
# Used for DirectIdSet
fixedbitset = "0.5"
# optional features
serde = { version = "1", optional = true }
petgraph = { version = "0.8", optional = true }

[workspace]
members = [".", "crates/*"]
default-members = [".", "crates/*"]

[workspace.package]
version = "0.3.0-alpha.2"
repository = "https://github.com/DuckLogic/intid.rs"
authors = ["Techcable <git@techcable.net>"]
readme = "README.md"
license = "MIT OR Apache-2.0"
# 1.56 - 2021 edition
# 1.61 - Vec::retain_mut
# 1.64 - workspace.package
# 1.65 - GAT
# 1.68 - sparse index
rust-version = "1.65"
edition = "2021"

[lints]
workspace = true

[workspace.dependencies]
intid-derive = { path  = "crates/intid-derive", version = "0.3.0-alpha.1" }
intid = { path  = "crates/intid", version = "0.3.0-alpha.1" }

[workspace.lints.rust]
missing-docs = "deny"

[workspace.lints.clippy]
alloc_instead_of_core = "deny"
std_instead_of_alloc = "deny"
std_instead_of_core = "deny"

# safety
undocumented_unsafe_blocks = "deny"
multiple_unsafe_ops_per_block = "deny"

[dev-dependencies]
# Testing serde
serde = "1"
serde_test = "1"
serde_derive = "1"
itertools = "0.14"
intid = { workspace = true, features = ["derive"] }

[features]
nightly = []
# Support serde serialization
serde = ["dep:serde"]
# Implement petgraph::visit::VisitMap for IdSet
petgraph = ["dep:petgraph"]


[package.metadata.docs.rs]
all-features = true
